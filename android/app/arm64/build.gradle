apply plugin: 'com.android.model.application'
apply from: "$rootDir/common-methods.gradle"

model {
    repositories {
        libs(PrebuiltLibraries) {
            eegeosdk {
                binaries.withType(SharedLibraryBinary) {
                    if (file("../../../android/libs/eegeo/prebuilt/android-${targetPlatform.getName()}/libeegeo-sdk.so").exists()) {
                        sharedLibraryFile = file("../../../android/libs/eegeo/prebuilt/android-${targetPlatform.getName()}/libeegeo-sdk.so")
                    }
                }
            }
        }
    }

    android {
        compileSdkVersion = 17
        buildToolsVersion = "23.0.3"

        defaultConfig.with {
            applicationId = "com.eegeo.mobileexampleapp"
            minSdkVersion.apiLevel      = 14
            targetSdkVersion.apiLevel   = 15
        }
    }

    android.ndk {
        moduleName = "eegeo-mobile-example-app"

        ldLibs.addAll(["GLESv2", "EGL", "android", "log"])
        platformVersion = 21
        stl = "gnustl_static"

        Set<String> includePaths = new HashSet<String>()
        appendRecursiveHeaderPaths('../../libs/eegeo/platform', includePaths)
        appendRecursiveHeaderPaths('../../../src', includePaths)
        appendRecursiveHeaderPaths('../src/main/jni', includePaths)

	includePaths.add(file('../../../libs/rapidjson').absolutePath)

        includePaths.each{ String path ->
            String fullPath = new String("-I" + path)
            cppFlags.add(fullPath)
        }

        cppFlags.add("-frtti")
        cppFlags.add("-fexceptions")
        cppFlags.add("-std=c++11")
        cppFlags.add("-DCOMPILE_CPP_11=1")
    }

    android.sources {
        main {
            jni {
                source {
                    srcDirs '../../../src'
                    srcDirs '../src/main/jni'
                }

                dependencies {
                    library "eegeosdk"
                }
            }

            jniLibs {
                dependencies {
                    library "eegeosdk"
                }
            }

            java.source.srcDirs '../src/main/java'
            assets.source.srcDirs '../src/main/assets'
            res.source.srcDirs '../src/main/res'
        }
    }

    android.buildTypes {
        debug {
            ndk.with {
                debuggable = true
            }

            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.txt'))
        }
    }

    android.productFlavors {
        create("arm64-v8a") {
            ndk.abiFilters.add("arm64-v8a")
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:23.2.1'
    compile files('../libs/FlurryAnalytics-5.1.0.jar')
    compile files('../libs/google-play-services.jar')
    compile files('../libs/scribe-1.3.5.jar')
}
