<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ExampleAppWPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Colours.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="POIcard_CloseButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle2">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle1" Fill="{StaticResource PrimaryBG_colour}" Margin="0"/>
                        <Rectangle x:Name="rectangle" Fill="{StaticResource PrimaryBG_Over_Colour}" Margin="0" Visibility="Hidden"/>
                        <Rectangle x:Name="rectangle2" Fill="{StaticResource PrimaryBG_Down_Colour}" Margin="0" Visibility="Hidden"/>
                        <Image x:Name="image" Source="/Assets/button_close_off.png"/>
                        <Image x:Name="image1" Source="/Assets/button_close_on.png" Visibility="Hidden"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AvailableToggleImageStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{StaticResource Transparent}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Visibility="Visible" Source="/Assets/button_occupancy_available_on.png" Width="192" Height="40" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Visibility="Visible" Source="/Assets/button_occupancy_available_off.png" Width="192" Height="40" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AvailableSoonToggleImageStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{StaticResource Transparent}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Visibility="Visible" Source="/Assets/button_occupancy_availablesoon_on.png" Width="192" Height="40" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Visibility="Visible" Source="/Assets/button_occupancy_availablesoon_off.png" Width="192" Height="40" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="OccupiedToggleImageStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{StaticResource Transparent}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Visibility="Visible" Source="/Assets/button_occupancy_occupied_on.png" Width="192" Height="40" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Visibility="Visible" Source="/Assets/button_occupancy_occupied_off.png" Width="192" Height="40" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:SwallowMeetingRoomSearchResultsPoiView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SwallowMeetingRoomSearchResultsPoiView}">
                    <Grid Name="MeetingRoomPoiContainer" Width="480" Height="Auto" Background="White" Margin="0,76,0,50">
                        <Grid Width="440"  Margin="20,17,20,20">
                            <Grid Background="White">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="46"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="48"/>
                                </Grid.RowDefinitions>
                                <!--Title bar-->
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="404"/>
                                        <ColumnDefinition Width="36"/>
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Orientation="Horizontal" Grid.Row="0" VerticalAlignment="Center" >
                                        <Image Name="CategoryIcon" Stretch="Uniform" Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SwallowMeetingRoomSearchResultsPoiView}}, Path=CategoryIcon}"/>
                                        <TextBlock Name="Title" Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SwallowMeetingRoomSearchResultsPoiView}}, Path=TitleText}"  MaxWidth="350" VerticalAlignment="Center" FontSize="28" Margin="4,-4,0,0"  Foreground="{DynamicResource PrimaryBG_Over_Colour}" FontFamily="{DynamicResource PrimaryUIFont}" TextTrimming="CharacterEllipsis"/>
                                    </StackPanel>
                                    <Border BorderBrush="{x:Null}" BorderThickness="0" HorizontalAlignment="Stretch" Height="Auto"  Background="{StaticResource Gold}" Grid.Column="1">
                                        <Button Style="{StaticResource POIcard_CloseButton}" Name="CloseButton" HorizontalAlignment="Right" Width="36" Height="36" />
                                    </Border>
                                </Grid>

                                <Grid Grid.Row="1" >
                                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Background="{StaticResource White}" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}">

                                        <StackPanel VerticalAlignment="Top">

                                            <!-- Details Divider -->
                                            <Grid Height="250">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="220"/>
                                                    <ColumnDefinition Width="10"/>
                                                    <ColumnDefinition Width="210"/>
                                                </Grid.ColumnDefinitions>
                                                <StackPanel VerticalAlignment="Top">
                                                    <StackPanel HorizontalAlignment="Stretch">
                                                        <ProgressBar Name="ImageProgress" HorizontalAlignment="Center" Visibility="Hidden"/>
                                                    </StackPanel>
                                                    <Grid Margin="0,0,0,0">
                                                        <Image Name="PoiImage" Source="/Assets/poi_placeholder.png"/>
                                                        <Grid Name="ImageGradient" Height="30" VerticalAlignment="Bottom"/>
                                                    </Grid>
                                                </StackPanel>
                                                <StackPanel Grid.Column="2" VerticalAlignment="Top" MaxHeight="280">
                                                    <!--Phone-->
                                                    <Grid Width="Auto" Margin="5,0,0,0">
                                                        <StackPanel HorizontalAlignment="Center">
                                                            <StackPanel.Resources>
                                                                <local:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
                                                            </StackPanel.Resources>
                                                            <Border Background="{StaticResource Transparent}" Padding="0,10,0,5">
                                                                <RadioButton Name="AvailableButton"
                                                             IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SwallowMeetingRoomSearchResultsPoiView}},
                                                                                 Path=Availability,
                                                                                 Converter={StaticResource EnumToBooleanConverter},
                                                                                 ConverterParameter={x:Static local:SwallowMeetingRoomSearchResultsPoiView+AvailalabilityType.Available}}"
                                                             Style="{StaticResource AvailableToggleImageStyle}"
                                                             GroupName="AvailabilityGroup"
                                                             Width="192"
                                                             Height="40"/>
                                                            </Border>
                                                            <Border Background="{StaticResource Transparent}" Padding="0,5,0,5">
                                                                <RadioButton Name="AvailableSoonButton"
                                                             IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SwallowMeetingRoomSearchResultsPoiView}},
                                                                                 Path=Availability,
                                                                                 Converter={StaticResource EnumToBooleanConverter},
                                                                                 ConverterParameter={x:Static local:SwallowMeetingRoomSearchResultsPoiView+AvailalabilityType.AvailableSoon}}"
                                                             Style="{StaticResource AvailableSoonToggleImageStyle}"
                                                             GroupName="AvailabilityGroup"
                                                             Width="192"
                                                             Height="40"/>
                                                            </Border>
                                                            <Border Background="{StaticResource Transparent}" Padding="0,5,0,5">
                                                                <RadioButton Name="OccupiedButton"
                                                             IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SwallowMeetingRoomSearchResultsPoiView}},
                                                                                 Path=Availability,
                                                                                 Converter={StaticResource EnumToBooleanConverter},
                                                                                 ConverterParameter={x:Static local:SwallowMeetingRoomSearchResultsPoiView+AvailalabilityType.Occupied}}"
                                                             Style="{StaticResource OccupiedToggleImageStyle}"
                                                             GroupName="AvailabilityGroup"
                                                             Width="192"
                                                             Height="40"/>
                                                            </Border>
                                                        </StackPanel>
                                                    </Grid>

                                                    <!--Address-->
                                                    <Grid Margin="5,15,0,0">
                                                        
                                                    </Grid>
                                                </StackPanel>

                                            </Grid>

                                            <!-- Details Divider -->
                                            <Border BorderBrush="{x:Null}" BorderThickness="0" HorizontalAlignment="Stretch" Height="2" Background="{StaticResource Gold}" Margin="0,20"/>

                                            <!-- Bottom Spacer -->
                                            <Grid Height="20"/>
                                        </StackPanel>
                                    </ScrollViewer>

                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
